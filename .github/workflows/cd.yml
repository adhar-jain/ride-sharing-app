name: build-test-deploy

on: 
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read 
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install
          npm cache clean --force

      # Build the Angular project
      - name: Build Angular project
        run: npm run build -- --output-path=dist/ride-sharing-app --base-href=/ride-sharing-app/

      # Add .nojekyll file
      - name: Add .nojekyll
        run: echo > dist/ride-sharing-app/.nojekyll

      # Copy index.html to 404.html
      - name: Copy index.html to 404.html
        run: cp dist/ride-sharing-app/index.html dist/ride-sharing-app/404.html

      # Debug the contents of the dist directory
      - name: Debug dist directory
        run: ls -R dist

      # Upload the dist directory as an artifact
      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/ride-sharing-app

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    permissions: write-all
    
    steps:
      # Checkout the gh-pages branch
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          persist-credentials: true

      # Setup Git credentials
      - name: Setup Git credentials with PAT
        run: |
          git config --global user.email "adharjain@gmail.com"
          git config --global user.name "adhar-jain"
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}

      # Clean the gh-pages branch
      - name: Clean gh-pages branch
        run: |
          git rm -rf . || true
          git clean -fdx

      # Download the artifact uploaded during the build job
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      # Copy all files from dist to the root of the repository
      - name: Copy files from dist to root
        run: cp -r dist/. .

      # Append a timestamp to index.html to force a change
      - name: Append timestamp to index.html
        run: echo "<!-- Deployed at $(date) -->" >> ./index.html

      # Debug root directory after copying files
      - name: Debug root directory
        run: ls -la

      # Debug gh-pages branch
      - name: Debug gh-pages branch
        run: ls -R

      # Commit and push changes to the gh-pages branch
      - name: Commit and push to gh-pages branch
        run: |
          git add -A
          git commit -m "Deploy to GitHub Pages - $(date)" || echo "No changes to commit"
          git push origin gh-pages --force